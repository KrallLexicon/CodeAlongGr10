// <auto-generated />
using CodeAlongGr10.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CodeAlongGr10.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221116092125_Added Many-To-Many between Car and Person")]
    partial class AddedManyToManybetweenCarandPerson
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CarPerson", b =>
                {
                    b.Property<string>("CarsRegNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PeopleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CarsRegNumber", "PeopleId");

                    b.HasIndex("PeopleId");

                    b.ToTable("CarPerson");
                });

            modelBuilder.Entity("CodeAlongGr10.Models.Car", b =>
                {
                    b.Property<string>("RegNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarModel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RegNumber");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            RegNumber = "ABC-123",
                            Brand = "SAAB",
                            CarModel = "93"
                        });
                });

            modelBuilder.Entity("CodeAlongGr10.Models.Person", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            Id = "d10534fb-1812-43f0-8cea-5d211458d0b3",
                            Age = 34,
                            Name = "Jonathan Krall",
                            PhoneNumber = "0737090202"
                        },
                        new
                        {
                            Id = "d0c17b10-e648-4c6d-8258-19cd5f8c4ade",
                            Age = 59,
                            Name = "Sven Svensson",
                            PhoneNumber = "123456"
                        },
                        new
                        {
                            Id = "506f160f-fa70-4b39-be15-99cfc192edd9",
                            Age = 26,
                            Name = "Anna Andersson",
                            PhoneNumber = "845621"
                        });
                });

            modelBuilder.Entity("CarPerson", b =>
                {
                    b.HasOne("CodeAlongGr10.Models.Car", null)
                        .WithMany()
                        .HasForeignKey("CarsRegNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CodeAlongGr10.Models.Person", null)
                        .WithMany()
                        .HasForeignKey("PeopleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
